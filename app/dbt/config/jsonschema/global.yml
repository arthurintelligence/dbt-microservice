$id: "dbt-shared-schema"
type: object
description: Shared flags for dbt
properties:
  cache_selected_only:
    type: string
    coerce: boolean
    enum: ["1", "0", "yes", "no", "on", "off", "true", "false"]
    description: > 
      At start of run, populate relational cache only for schemas containing selected nodes.
      Truthy values are equivalent to setting --cache-selected-only flag,
      while falsy values are equivalent --no-cache-selected-only flag.
  debug:
    type: string
    coerce: boolean
    enum: ["1", "0", "yes", "no", "on", "off", "true", "false"]
    description: > 
      Display debug logging during execution.
      Truthy values are equivalent to setting --debug flag,
      while falsy values are equivalent --no-debug flag.
  defer:
    type: string
    coerce: boolean
    enum: ["1", "0", "yes", "no", "on", "off", "true", "false"]
    description: >
      If set, resolve unselected nodes by deferring to the manifest within the --state
      directory.
      Truthy values are equivalent to setting --defer flag, while 0 is equivalent to setting
      --no-defer flag.
  defer_state:
    type: string
    coerce: directory
    description: Override the state directory for deferral only
  deprecated_favor_state:
    type: string
    description: Internal flag for deprecating old env var
  fail_fast:
    type: string
    coerce: boolean
    enum: ["1", "0", "yes", "no", "on", "off", "true", "false"]
    description: > 
      Stop execution on first failure.
      Truthy values are equivalent to setting --fail-fast flag,
      while falsy values are equivalent --no-fail-fast flag.
  favor_state:
    type: string
    coerce: boolean
    enum: ["1", "0", "yes", "no", "on", "off", "true", "false"]
    description: >
      Defer to state flag for resolving unselected nodes.
      Truthy values are equivalent to setting --favor-state flag,
      while falsy values are equivalent --no-favor-state flag.
  indirect_selection:
    type: string
    enum: [eager, cautious, buildable, empty]
    description: >
      Choose which tests to select that are adjacent to selected resources. Eager is
      most inclusive, cautious is most exclusive, and buildable is in between.
      Empty includes no tests at all.
  log_cache_events:
    type: string
    coerce: boolean
    enum: ["1", "0", "yes", "no", "on", "off", "true", "false"]
    description: >
      Enable verbose logging for relational cache events.
      Truthy values are equivalent to setting --log-cache-events flag,
      while falsy values are equivalent --no-log-cache-events flag.
  log_format:
    type: string
    enum: [text, debug, json, default]
    description: >
      Specify the format of logging to the console and the log file.
      Use --log-format-file to configure the format for the log file.
  log_format_file:
    type: string
    enum: [text, debug, json, default]
    description: Specify the format of logging to the log file
  log_level:
    type: string
    enum: [debug, info, warn, error, none]
    description: >
      Specify the minimum severity of events that are logged to the console and 
      the log file. Use --log-level-file to configure the severity for the log 
      file differently than the console.
  log_level_file:
    type: string
    enum: [debug, info, warn, error, none]
    description: >
     Specify the minimum severity of events that are logged to the log file by
     overriding the default value and the general --log-level setting.
  log_path:
    type: string
    coerce: file
    description: Configure log path for current run
  partial_parse:
    type: string
    coerce: boolean
    enum: ["1", "0", "yes", "no", "on", "off", "true", "false"]
    description: >
      Allow for partial parsing by looking for and writing to a pickle file in
      the target directory. This overrides the user configuration file.
      Truthy values are equivalent to setting --partial-parse flag,
      while falsy values are equivalent --no-partial-parse flag.
  populate_cache:
    type: string
    coerce: boolean
    enum: ["1", "0", "yes", "no", "on", "off", "true", "false"]
    description: >
      At start of run, use `show` or `information_schema` queries to populate a
      relational cache, which can speed up subsequent materializations.
      Truthy values are equivalent to setting --populate-cache flag,
      while falsy values are equivalent --no-populate-cache flag.
  print:
    type: string
    coerce: boolean
    enum: ["1", "0", "yes", "no", "on", "off", "true", "false"]
    description: >
      Output all {{ print() }} macro calls
      Truthy values are equivalent to setting --print flag,
      while falsy values are equivalent --no-print flag.
  printer_width:
    type: string
    coerce: boolean
    enum: ["1", "0", "yes", "no", "on", "off", "true", "false"]
    minimum: 40
    description: Width of terminal output
  profile:
    type: string
    description: Which existing profile to load
  quiet:
    type: string
    coerce: boolean
    enum: ["1", "0", "yes", "no", "on", "off", "true", "false"]
    description: >
      Suppress non-error logging
      Truthy values are equivalent to setting --quiet flag,
      while falsy values are equivalent --no-quiet flag.
  record_timing_info:
    type: string
    coerce: file
    description: Output low-level timing stats to the specified file
  send_anonymous_usage_stats:
    type: boolean
    description: Send anonymous usage stats to dbt Labs
  state:
    type: string
    coerce: directory
    description: Use this state directory for both state comparison and deferral
  static_parser:
    type: string
    coerce: boolean
    enum: ["1", "0", "yes", "no", "on", "off", "true", "false"]
    description: >
      Use static parser
      Truthy values are equivalent to setting --static-parser flag,
      while falsy values are equivalent --no-static-parser flag.
  target:
    type: string
    description: Which target to load for the given profile
  use_colors:
    type: boolean
    description: Specify whether log output is colorized
  use_colors_file:
    type: string
    coerce: boolean
    enum: ["1", "0", "yes", "no", "on", "off", "true", "false"]
    description: > 
      Colorize log output
      Truthy values are equivalent to setting --use-colors flag,
      while falsy values are equivalent --no-use-colors flag.
  use_experimental_parser:
    type: string
    coerce: boolean
    enum: ["1", "0", "yes", "no", "on", "off", "true", "false"]
    description: > 
      Enable experimental parsing features
      Truthy values are equivalent to setting --use-experimental-parser flag,
      while falsy values are equivalent --no-use-experimental-parser flag.
  version:
    type: boolean
    description: Show version information
  version_check:
    type: string
    coerce: boolean
    enum: ["1", "0", "yes", "no", "on", "off", "true", "false"]
    description: >
      If set, ensure the installed dbt version matches the require-dbt-version specified in
      the dbt_project.yml file (if any).
      Otherwise, allow them to differ.
      Truthy values are equivalent to setting --version-check flag,
      while falsy values are equivalent --no-version-check flag.
  warn_error:
    type: boolean
    description: Raise exception instead of warning
  warn_error_options:
    type: object
    description: >
      If dbt would normally warn, instead raise an exception based on include/exclude
      configuration. Examples include --select that selects nothing, deprecations,
      configurations with no associated models, invalid test configurations, and
      missing sources/refs in tests. This argument should be a YAML string, with keys
      'include' or 'exclude'. eg. '{"include": "all", "exclude": ["NoNodesForSelectionCriteria"]}'
  write_json:
    type: string
    coerce: boolean
    enum: ["1", "0", "yes", "no", "on", "off", "true", "false"]
    description: >
      Write manifest and results JSON files.
      Truthy values are equivalent to setting --write-json flag,
      while falsy values are equivalent --no-write-json flag